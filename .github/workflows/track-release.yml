name: Check Ollama Version, Update Dockerfile, Create Release, and Push Docker Image

on:
  schedule:
    - cron: '15 * * * *'
  workflow_dispatch:

jobs:
  check-update-release-and-push:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get latest Ollama release
        id: ollama_release
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/ollama/ollama/releases/latest | jq -r .tag_name)
          LATEST_VERSION_NO_V=${LATEST_VERSION#v}
          echo "LATEST_VERSION=${LATEST_VERSION}" >> $GITHUB_OUTPUT
          echo "LATEST_VERSION_NO_V=${LATEST_VERSION_NO_V}" >> $GITHUB_OUTPUT

      - name: Check current version in Dockerfile
        id: current_version
        run: |
          CURRENT_VERSION=$(grep 'FROM ollama/ollama:' Dockerfile | cut -d: -f2)
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_OUTPUT

      - name: Update Dockerfile if version changed
        if: steps.ollama_release.outputs.LATEST_VERSION_NO_V != steps.current_version.outputs.CURRENT_VERSION
        run: |
          sed -i 's|FROM ollama/ollama:.*|FROM ollama/ollama:${{ steps.ollama_release.outputs.LATEST_VERSION_NO_V }}|' Dockerfile

      - name: Commit changes
        if: steps.ollama_release.outputs.LATEST_VERSION_NO_V != steps.current_version.outputs.CURRENT_VERSION
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "chore: bump ollama to ${{ steps.ollama_release.outputs.LATEST_VERSION }}"

      - name: Push changes
        if: steps.ollama_release.outputs.LATEST_VERSION_NO_V != steps.current_version.outputs.CURRENT_VERSION
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Create Git Tag
        if: steps.ollama_release.outputs.LATEST_VERSION_NO_V != steps.current_version.outputs.CURRENT_VERSION
        run: |
          git tag ${{ steps.ollama_release.outputs.LATEST_VERSION }}
          git push origin ${{ steps.ollama_release.outputs.LATEST_VERSION }}

      - name: Create Release
        if: steps.ollama_release.outputs.LATEST_VERSION_NO_V != steps.current_version.outputs.CURRENT_VERSION
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.ollama_release.outputs.LATEST_VERSION }}
          release_name: ${{ steps.ollama_release.outputs.LATEST_VERSION }}
          body: |
            Automatically updated to Ollama version ${{ steps.ollama_release.outputs.LATEST_VERSION }}.
          draft: false
          prerelease: false

      # Docker build and push steps
      - name: Log in to GitHub Container Registry
        if: steps.ollama_release.outputs.LATEST_VERSION_NO_V != steps.current_version.outputs.CURRENT_VERSION
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        if: steps.ollama_release.outputs.LATEST_VERSION_NO_V != steps.current_version.outputs.CURRENT_VERSION
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        if: steps.ollama_release.outputs.LATEST_VERSION_NO_V != steps.current_version.outputs.CURRENT_VERSION
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        if: steps.ollama_release.outputs.LATEST_VERSION_NO_V != steps.current_version.outputs.CURRENT_VERSION
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/monotykamary/ollama-auth:latest
            ghcr.io/monotykamary/ollama-auth:${{ steps.ollama_release.outputs.LATEST_VERSION }}
